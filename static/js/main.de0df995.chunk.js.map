{"version":3,"sources":["components/ItemList/ItemList.module.css","components/Contacts/Contacts.module.css","components/Footer/Footer.module.css","components/Repository/Repository.module.css","components/InputItem/InputItem.module.css","components/About/About.module.css","components/App/App.module.css","components/RepoList/RepoList.module.css","components/Todo/Todo.module.css","components/Item/Item.module.css","components/InputItem/InputItem.js","components/Item/Item.js","components/ItemList/ItemList.js","components/Footer/Footer.js","components/Todo/Todo.js","components/Repository/Repository.js","components/RepoList/RepoList.js","components/About/About.js","components/Contacts/img/telegram.svg","components/Contacts/img/instagram.svg","components/Contacts/img/phone.svg","components/Contacts/Contacts.js","components/App/App.js","index.js"],"names":["module","exports","InputItem","state","inputValue","onIconClick","setState","props","onClickAdd","this","isEmpty","isExist","className","styles","tasks","classnames","input_box","input_empty","input_exist","type","placeholder","color","input","value","onChange","event","target","addbutton","onClick","React","Component","Item","task","onChangeTask","e","currentTarget","onChangeItem","id","disabled","isDone","item","done","edit_mode","ItemList","sort","sortValue","onClickDone","onClickDelete","onClickEdit","length","task_list_empty","picture","empty_article","empty_sub_article","task_list","map","task_list_item","Checkbox","checked","but_edit","but_edit_done","edit_mode_off","edit_mode_on","but_delete","Footer","items","onClickSort","sorting","allTasks","completedTasks","filter","uncompletedTasks","footer_menu","button","selected","task_count","TaskTodo","sortingTasks","initialState","JSON","parse","localStorage","getItem","count","sortTask","isEdited","useState","setItems","setCount","setEmpty","setExist","setSort","addToLocal","stringify","setItem","container","todo_title","tasks_item_list","newItemList","newItem","newTask","newTaskValue","some","newItems","footer","Repository","url","name","forks_count","stargazers_count","language","updated_at","repo_name","href","rel","repo_name_link","repo_about","html_circle","css_circle","js_circle","stargazers","forks","updated","Date","toLocaleDateString","day","month","year","RepoList","repoList","onClickNext","onClickBack","firstRepo","lastRepo","repo_list","repo","html_url","slice","buttons_wrap","octokit","Octokit","About","username","isLoading","errorText","isError","userData","repos","listForUser","then","data","catch","users","getByUsername","err","wrapper","userInfo","userInfo__header","login","avatar","src","avatar_url","alt","avatar__title","avatar__subtitle","bio","Card","CircularProgress","infoOfUser","Contacts","wrap","title","content","telegram","icon","links","instagram","phone","App","board","MenuList","link","to","MenuItem","path","exact","component","Todo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de0df995.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task_list_empty\":\"ItemList_task_list_empty__3NvXM\",\"picture\":\"ItemList_picture__mXJh0\",\"empty_article\":\"ItemList_empty_article__2XqSt\",\"empty_sub_article\":\"ItemList_empty_sub_article__2eoDP\",\"task_list\":\"ItemList_task_list__2_Tdn\",\"task_list_item\":\"ItemList_task_list_item__1Uvdz\",\"but_edit\":\"ItemList_but_edit__3rg8W\",\"edit_mode_off\":\"ItemList_edit_mode_off__zdwOa\",\"edit_mode_on\":\"ItemList_edit_mode_on__1U_By\",\"but_edit_done\":\"ItemList_but_edit_done__13knp\",\"but_delete\":\"ItemList_but_delete__1O2XY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Contacts_wrap__2Grdg\",\"title\":\"Contacts_title__2vcRG\",\"item\":\"Contacts_item__3Dzyr\",\"links\":\"Contacts_links__1STHb\",\"content\":\"Contacts_content__2eYX8\",\"icon\":\"Contacts_icon__2hVgg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer_menu\":\"Footer_footer_menu__2xsL_\",\"task_count\":\"Footer_task_count__2tJJs\",\"button\":\"Footer_button__1drjP\",\"selected\":\"Footer_selected__3W2vE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repo_name\":\"Repository_repo_name__1nw2F\",\"repo_name_link\":\"Repository_repo_name_link__1_pdl\",\"repo_about\":\"Repository_repo_about__1FmHF\",\"language\":\"Repository_language__3x0pv\",\"stargazers\":\"Repository_stargazers__sG8wZ\",\"forks\":\"Repository_forks__1pfVV\",\"updated\":\"Repository_updated__1xeLY\",\"html_circle\":\"Repository_html_circle__FPhYP\",\"css_circle\":\"Repository_css_circle__2JyxP\",\"js_circle\":\"Repository_js_circle__2JBvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks\":\"InputItem_tasks__2tifL\",\"input_box\":\"InputItem_input_box__3jXkP\",\"input\":\"InputItem_input__U3ldA\",\"input_empty\":\"InputItem_input_empty__pk_xo\",\"input_exist\":\"InputItem_input_exist__2XcyY\",\"addbutton\":\"InputItem_addbutton__1KPUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"About_wrapper__TWg1F\",\"wrap\":\"About_wrap__v3bk6\",\"userInfo\":\"About_userInfo__RkQXJ\",\"userInfo__header\":\"About_userInfo__header__2qyOd\",\"avatar\":\"About_avatar__2c6zl\",\"repos\":\"About_repos__33bEC\",\"repoList\":\"About_repoList__2muRu\",\"repoItem\":\"About_repoItem__3lLFW\",\"errorText\":\"About_errorText__1ItOp\",\"avatar__contacts\":\"About_avatar__contacts__10hGs\",\"avatar__phone\":\"About_avatar__phone__1WVW8\",\"avatar__contacts_data\":\"About_avatar__contacts_data__1hsKO\",\"avatar__contacts_phone\":\"About_avatar__contacts_phone__2fEdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"App_wrap__1GOO0\",\"title\":\"App_title__10E6S\",\"link\":\"App_link__1kQtT\",\"content\":\"App_content__2myV_\",\"sidebar\":\"App_sidebar__1Vzg7\",\"menu\":\"App_menu__1BLC0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repo_list\":\"RepoList_repo_list__1vmKu\",\"buttons_wrap\":\"RepoList_buttons_wrap__3EL6p\",\"button\":\"RepoList_button__208sK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Todo_container__2pUdh\",\"todo_title\":\"Todo_todo_title__1c4VH\",\"tasks_item_list\":\"Todo_tasks_item_list__2vVer\",\"footer\":\"Todo_footer__qnR8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__2aANt\",\"done\":\"Item_done__2BaIv\",\"edit_mode\":\"Item_edit_mode__JEnac\"};","import React from 'react';\r\nimport styles from './InputItem.module.css';\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass InputItem extends React.Component {\r\n  state = {\r\n    inputValue: ''\r\n  };\r\n  onIconClick = () => {\r\n          this.setState({\r\n              inputValue: ''\r\n          });\r\n          this.props.onClickAdd(this.state.inputValue);\r\n    };\r\n\r\n  render() {\r\n     const {isEmpty, isExist} = this.props;\r\n     return (\r\n        <form className={styles.tasks}>\r\n                <div className={classnames({\r\n                    [styles.input_box]: true,\r\n                    [styles.input_empty]: isEmpty,\r\n                    [styles.input_exist]: isExist\r\n                })}>\r\n\r\n                <input\r\n                     type='text'\r\n                     placeholder=\"Добавить задание\"\r\n                     color='primary'\r\n                     className={classnames({\r\n                        [styles.input]: true,\r\n                        [styles.input_empty]: isEmpty,\r\n                        [styles.input_exist]: isExist\r\n                      })}\r\n                      value={this.state.inputValue}\r\n                      onChange={event => this.setState({inputValue: event.target.value})}\r\n                    />\r\n                </div>\r\n               <div className={styles.addbutton} onClick={this.onIconClick}> </div>\r\n            </form>);\r\n        }\r\n    }\r\n\r\nInputItem.propTypes = {\r\n    onClickAdd: PropTypes.func.isRequired,\r\n    isEmpty: PropTypes.bool.isRequired,\r\n    isExist: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default InputItem;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from \"classnames\";\r\nimport styles from './Item.module.css';\r\n\r\n\r\nclass Item extends React.Component {\r\n    state = {\r\n        task: this.props.task\r\n    };\r\n\r\n    onChangeTask = e => {\r\n        this.setState ({\r\n            task: e.currentTarget.value\r\n        });\r\n        this.props.onChangeItem(this.props.id, e.currentTarget.value);\r\n    };\r\n\r\n  render() {\r\n    const { id, disabled, isDone } = this.props;\r\n\r\n    return (\r\n            <input\r\n                type='text'\r\n                className={\r\n                    classnames({\r\n                        [styles.item]: true,\r\n                        [styles.done]: isDone,\r\n                        [styles.edit_mode]: !disabled && !isDone\r\n                    })}\r\n                value={this.state.task}\r\n                id={id}\r\n                disabled={disabled}\r\n                onChange={this.onChangeTask}\r\n            />);\r\n    }\r\n}\r\n       //color=\"primary\"\r\n\r\nItem.propTypes = {\r\n  isDone: PropTypes.bool.isRequired,\r\n  task: PropTypes.oneOfType([\r\n        PropTypes.string.isRequired,\r\n        PropTypes.number.isRequired,\r\n        PropTypes.symbol.isRequired\r\n  ])\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from '../Item/Item';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport styles from \"./ItemList.module.css\";\r\nimport classnames from \"classnames\";\r\n\r\nclass ItemList extends React.Component {\r\n\r\n  render() {\r\n    const {sort, sortValue, onClickDone, onClickDelete, onClickEdit, onChangeItem} = this.props;\r\n\r\n  return (\r\n    <div>\r\n        { sort.length === 0 && sortValue !== 'Завершенные' ?\r\n            <div className={styles.task_list_empty}>\r\n                <span className={styles.picture}> </span>\r\n                <p className={styles.empty_article}> Вы еще не добавили ни одной задачи </p>\r\n                <p className={styles.empty_sub_article}> Сделайте это прямо сейчас! </p>\r\n            </div>:\r\n            <ul  className={styles.task_list}>\r\n                {sort.map(item => <li key={item.id} className={styles.task_list_item}>\r\n                  <Checkbox\r\n                      checked={item.isDone}\r\n                      color='primary'\r\n                      onClick={() => onClickDone(item.id)}\r\n                  />\r\n                  <Item\r\n                      task={item.task}\r\n                      disabled = {item.disabled}\r\n                      isDone={item.isDone}\r\n                      id={item.id}\r\n                      onChangeItem={onChangeItem}\r\n                  />\r\n                  <div\r\n                      className={\r\n                        classnames({\r\n                            [styles.but_edit]: true,\r\n                            [styles.but_edit_done]: item.isDone + !item.disabled\r\n                        })}\r\n                        onClick={() => onClickEdit(item.id)}\r\n                  />\r\n                  <div\r\n                      className={\r\n                        classnames({\r\n                            [styles.edit_mode_off]: item.disabled + item.isDone,\r\n                            [styles.edit_mode_on]: !item.disabled\r\n                        })}\r\n                      onClick={() => onClickEdit(item.id)}\r\n                  />\r\n                  <div\r\n                      className={styles.but_delete}\r\n                      onClick={() => onClickDelete(item.id)}\r\n                  />\r\n              </li>)}\r\n           </ul>}\r\n       </div>);\r\n    }\r\n}\r\nItemList.propTypes = {\r\n    items: PropTypes.oneOfType ([\r\n        PropTypes.array.isRequired,\r\n        PropTypes.object.isRequired,\r\n        PropTypes.string.isRequired\r\n    ]),\r\n    onClickDone: PropTypes.func.isRequired,\r\n    onClickDelete: PropTypes.func.isRequired,\r\n    onChangeItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ItemList;","import React from 'react';\r\n\r\nimport styles from \"./Footer.module.css\";\r\nimport classnames from \"classnames\";\r\n\r\nconst Footer = ({items, onClickSort, sorting}) => {\r\n    const allTasks = items.length;\r\n    const completedTasks = items.filter(item => item.isDone).length;\r\n    const uncompletedTasks = items.filter(item => !item.isDone).length;\r\n\r\n    return(\r\n        <div className={styles.footer_menu}>\r\n            <button\r\n                className={classnames({\r\n                    [styles.button]: true,\r\n                    [styles.selected]: sorting === 'Завершенные'\r\n                })}\r\n                onClick={()=>onClickSort('Завершенные')\r\n                }>\r\n                Завершённые\r\n                <span className={styles.task_count}> {completedTasks} </span>\r\n            </button>\r\n            <button\r\n                className={classnames({\r\n                    [styles.button]: true,\r\n                    [styles.selected]: sorting === 'Незавершенные'\r\n                })}\r\n                onClick={()=> onClickSort('Незавершенные')\r\n                }>\r\n                Незавершённые\r\n                <span className={styles.task_count}> {uncompletedTasks} </span>\r\n            </button>\r\n            <button\r\n                className={classnames({\r\n                    [styles.button]: true,\r\n                    [styles.selected]: sorting === 'Все'\r\n                })}\r\n                onClick={()=> onClickSort('Все')\r\n                }>\r\n                Все\r\n                <span className={styles.task_count}> {allTasks} </span>\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React, {useState} from 'react';\r\nimport InputItem from '../InputItem/InputItem';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport Footer from '../Footer/Footer';\r\nimport styles from \"./Todo.module.css\";\r\n\r\nconst TaskTodo = () => {\r\n    const initialState = {\r\n        items : \r\n           JSON.parse(localStorage.getItem('editedList') ||\r\n                '[{\"task\": \"Погладить кота\", \"isDone\": true, \"id\": 1, \"disabled\": true}, {\"task\": \"Покормить кота\", \"isDone\": false, \"id\": 2, \"disabled\": true}]'\r\n            ),\r\n        count: 2,\r\n        sortTask: 'Все',\r\n        isEmpty: false,\r\n        isExist: false,\r\n        isEdited: false\r\n    };\r\n\r\n    const [items, setItems] = useState(initialState.items);\r\n    const [count, setCount] = useState(initialState.count);\r\n    const [isEmpty, setEmpty] = useState(initialState.isEmpty);\r\n    const [isExist, setExist] = useState(initialState.isExist);\r\n    const [sortTask, setSort] = useState(initialState.sortTask);\r\n\r\n\r\n    const onClickDone = id => {\r\n       const newItemList = items.map( item => {\r\n          const newItem = { ...item};\r\n              \r\n           if (item.id === id) {\r\n                newItem.isDone = !item.isDone;\r\n            }  \r\n\r\n           return newItem;\r\n        });\r\n\r\n       setItems(newItemList);\r\n    };\r\n      \r\n    const onClickDelete = id => {\r\n        const newItemList = items.filter(item => item.id !== id);\r\n        setItems(newItemList);\r\n        setCount(count - 1);\r\n    };\r\n  const onClickAdd = task => {\r\n        if (task !== '' && !items.some(item => item.task === task)) {\r\n            const id = items.length > 0?\r\n                items[items.length-1].id + 1: 0;\r\n            const newItems = [\r\n                ...items,\r\n                {\r\n                    task,\r\n                    isDone: false,\r\n                    id: id,\r\n                    disabled: true\r\n                }\r\n            ];\r\n            setItems(newItems);\r\n            setCount(count + 1);\r\n            setEmpty(false);\r\n            setExist(false)\r\n        } else {\r\n            setEmpty(task === '');\r\n            setExist(task !== '');\r\n        }\r\n    };  \r\n\r\n const onClickEdit = id => {\r\n        const newItemList = items.map( item => {\r\n            if (item.id === id) {\r\n                item.disabled = !item.disabled;\r\n            }\r\n            return item;\r\n        });\r\n        setItems(newItemList);\r\n    };\r\n\r\n    const onChangeItem = (id, newTask) => {\r\n        const newItemList = items.map(item => {\r\n            const newTaskValue = {...item};\r\n            if (item.id === id) {\r\n                newTaskValue.task = newTask;\r\n            }\r\n            return newTaskValue;\r\n        });\r\n        setItems(newItemList);\r\n    };\r\n\r\n    const onClickSort = sorting => setSort(sorting);\r\n\r\n    let addToLocal = JSON.stringify(items);\r\n    localStorage.setItem('editedList', addToLocal);\r\n\r\n    let sortingTasks;\r\n    switch (sortTask) {\r\n        case 'Завершенные':\r\n            sortingTasks = items.filter(item => item.isDone);\r\n            break;\r\n        case 'Незавершенные':\r\n            sortingTasks = items.filter(item => !item.isDone);\r\n            break;\r\n        case 'Все':\r\n            sortingTasks = items;\r\n            break;\r\n        default :\r\n            sortingTasks = items;\r\n    }\r\n\r\n\r\n      return (\r\n          <div className={styles.container}>\r\n            <h1 className={styles.todo_title}>Список задач</h1>\r\n\r\n            <div className={styles.tasks_item_list}>\r\n                <ItemList\r\n                    task = {items.task}\r\n                    disabled = {items.disabled}\r\n                    sort={sortingTasks}\r\n                    sortValue={sortTask}\r\n                    onClickDone={onClickDone}\r\n                    onClickDelete={onClickDelete}\r\n                    onClickEdit = {onClickEdit}\r\n                    onChangeItem = {onChangeItem}\r\n                />\r\n            </div>\r\n            <InputItem onClickAdd={onClickAdd} isEmpty={isEmpty} isExist={isExist}/>\r\n            <div className={styles.footer}>\r\n                <Footer\r\n                    items={items}\r\n                    onClickSort={onClickSort}\r\n                    sorting={sortTask}\r\n                />\r\n            </div>\r\n\r\n        </div>)\r\n};\r\n\r\n\r\n\r\nexport default TaskTodo;","import React from \"react\";\r\nimport styles from \"./Repository.module.css\";\r\nimport classnames from \"classnames\";\r\n\r\n\r\nconst Repository= ({url, name, forks_count, stargazers_count, language, updated_at}) => (\r\n    <div>\r\n        <div className={styles.repo_name}>\r\n            <a\r\n                href={url}\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n                className={styles.repo_name_link}\r\n            >\r\n                {name}\r\n            </a>\r\n        </div>\r\n        <div className={styles.repo_about}>\r\n            <span className={classnames({\r\n                [styles.language]: true,\r\n                [styles.html_circle]: language === 'HTML',\r\n                [styles.css_circle]: language === 'CSS',\r\n                [styles.js_circle]: language === 'JavaScript'\r\n            })}\r\n            >\r\n                {language}\r\n            </span>\r\n            <span className={styles.stargazers}> {stargazers_count} </span>\r\n            <span className={styles.forks}> {forks_count} </span>\r\n            <span className={styles.updated}>\r\n                {'Updated on ' + new Date(updated_at).toLocaleDateString(\r\n                    'en-GB',\r\n                    {\r\n                        day: 'numeric',\r\n                        month:'short',\r\n                        year: 'numeric'\r\n                    }\r\n                )}\r\n            </span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Repository;\r\n","import React from \"react\";\r\nimport styles from \"./RepoList.module.css\";\r\nimport Repository from \"../Repository/Repository\";\r\n\r\nconst RepoList = ({repoList, onClickNext, onClickBack, firstRepo, lastRepo }) => {\r\n    return(\r\n        <div>\r\n            {repoList.length < 6 ?\r\n                <ol className={styles.repo_list}>\r\n                    {repoList.map(repo => (<li key={repo.id}>\r\n                            <Repository\r\n                                url={repo.html_url}\r\n                                name={repo.name}\r\n                                language={repo.language}\r\n                                stargazers_count={repo.stargazers_count}\r\n                                forks_count={repo.forks_count}\r\n                                updated_at={repo.updated_at}\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ol> :\r\n                <div>\r\n                    <ol className={styles.repo_list}>\r\n                        {repoList.slice(firstRepo, lastRepo).map(repo => (\r\n                            <li key={repo.id}>\r\n                                <Repository\r\n                                    url={repo.html_url}\r\n                                    name={repo.name}\r\n                                    language={repo.language}\r\n                                    stargazers_count={repo.stargazers_count}\r\n                                    forks_count={repo.forks_count}\r\n                                    updated_at={repo.updated_at}\r\n                                />\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                    <div className={styles.buttons_wrap}>\r\n                        <button\r\n                            className={styles.button}\r\n                            onClick={()=>onClickBack()}\r\n                            disabled={firstRepo < 5}\r\n                        >\r\n                            Назад\r\n                        </button>\r\n                        <button\r\n                            className={styles.button}\r\n                            onClick={()=>onClickNext()}\r\n                            disabled={repoList.length - lastRepo <= 0}\r\n                        >\r\n                            Далее\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )};\r\n\r\nexport default RepoList;\r\n","import React from \"react\";\r\nimport { Octokit } from '@octokit/rest';\r\nimport styles from \"./About.module.css\";\r\n//import { LinearProgress } from '@material-ui/core';\r\nimport RepoList from \"../RepoList/RepoList\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst octokit = new Octokit();\r\n\r\nclass About extends React.Component {\r\n\r\n    state = {\r\n        username: 'AntonovaAL',\r\n        isLoading: true,\r\n        repoList: [],\r\n        errorText: 'Возникла ошибка при получении данных',\r\n        isError: false,\r\n        userData: {},\r\n        firstRepo: 0,\r\n        lastRepo: 5\r\n    };\r\n\r\n    componentDidMount() {\r\n        octokit.repos.listForUser({\r\n            username: this.state.username\r\n        })\r\n            .then(({ data }) => {\r\n                this.setState({\r\n                    repoList: data,\r\n                    isLoading: false\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    isError: true,\r\n                    //errorText: err\r\n                })\r\n            });\r\n\r\n        octokit.users.getByUsername({\r\n            username: this.state.username\r\n        })\r\n            .then(({data}) => {\r\n                this.setState({\r\n                   userData: data,\r\n                   isLoading: false,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    isError: true,\r\n                    errorText: err\r\n                })\r\n            });\r\n\r\n    };\r\n    onClickNext = () => {\r\n        this.setState({\r\n            firstRepo: this.state.firstRepo + 5,\r\n            lastRepo: this.state.lastRepo + 5\r\n        });\r\n    };\r\n\r\n    onClickBack = () => {\r\n        this.setState({\r\n            firstRepo: this.state.firstRepo - 5,\r\n            lastRepo: this.state.lastRepo - 5\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { isLoading, repoList, userData, isError, errorText } = this.state;\r\n\r\n        if (!isError)\r\n            return (\r\n                <div className={styles.wrapper}>\r\n                    <div className={styles.userInfo}>\r\n                        <h1 className={styles.userInfo__header}>\r\n                            {userData.name} (<a href={userData.html_url} target=\"__blank\">{userData.login}</a>)\r\n                    </h1>\r\n                        <p>\r\n                            <img className={styles.avatar} src={userData.avatar_url} alt='Фото профиля' />\r\n                            <div>\r\n                                <p className={styles.avatar__title}> {userData.name} </p>\r\n                                <p className={styles.avatar__subtitle}> {userData.bio} </p>\r\n                            </div>\r\n                        </p>\r\n                    </div>\r\n                    <Card>\r\n                        <div className={styles.repos}>\r\n                            {isLoading ?\r\n                                <div>\r\n                                    <h3> Список репозиториев на github.com </h3>\r\n                                    <CircularProgress/>\r\n                                </div> :\r\n                                <div>\r\n                                    {isError ?\r\n                                        <div>\r\n                                            <h3> Что-то пошло не так. Невозможно отобразить список репозиториев :( </h3>\r\n                                        </div> :\r\n                                        <div>\r\n                                            {repoList.length === 0 ?\r\n                                                <div>\r\n                                                    <h3> Список репозиториев на github.com. К сожалению у Вас нет ни одного репозитория... </h3>\r\n                                                </div> :\r\n                                                <RepoList\r\n                                                    repoList={repoList}\r\n                                                    infoOfUser={userData}\r\n                                                    onClickNext={this.onClickNext}\r\n                                                    onClickBack={this.onClickBack}\r\n                                                    firstRepo={this.state.firstRepo}\r\n                                                    lastRepo={this.state.lastRepo}\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                </Card>\r\n            </div>\r\n        );\r\n\r\n        else\r\n            return (\r\n                <h2 className={styles.errorText}>\r\n                    {errorText}...\r\n                </h2>\r\n            )\r\n    };\r\n};\r\n\r\n\r\nexport default About;","export default __webpack_public_path__ + \"static/media/telegram.da27cc00.svg\";","export default __webpack_public_path__ + \"static/media/instagram.94cb6bee.svg\";","export default __webpack_public_path__ + \"static/media/phone.1ef26426.svg\";","import React from \"react\";\r\nimport styles from \"./Contacts.module.css\";\r\nimport telegram from \"./img/telegram.svg\";\r\nimport instagram from \"./img/instagram.svg\";\r\nimport phone from \"./img/phone.svg\";\r\n\r\n\r\nconst Contacts = () => {\r\n    return (\r\n        <div className={styles.wrap}>\r\n        <h1 className={styles.title}>My contacts</h1>\r\n            <div className={styles.content}>\r\n                <div className={styles.item}>\r\n                    <img src={telegram} alt=\"telegram\" className={styles.icon} />\r\n                    <a className={styles.links} href='https://t.me/Antonova_1147'>Telegram</a>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <img src={instagram} alt=\"instagram\" className={styles.icon} />\r\n                    <a className={styles.links} href='https://www.instagram.com/antonova__1147'>Instagram</a>\r\n                </div>\r\n                <div className={styles.item}>\r\n                    <img src={phone} alt=\"tel\" className={styles.icon} />\r\n                    <p>+7(913)424-67-97</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport About from \"../About/About\";\r\nimport Contacts from \"../Contacts/Contacts\";\r\nimport styles from \"./App.module.css\";\r\n\r\nconst App = () => (\r\n    <Router>\r\n      <div className={styles.wrap}>\r\n      <Card className={styles.board}>\r\n          <MenuList>\r\n              <Link className={styles.link} to='/'><MenuItem>Обо мне</MenuItem></Link>\r\n              <Link className={styles.link} to='/todo'><MenuItem>Дела</MenuItem></Link>\r\n              <Link className={styles.link} to='/contacts'><MenuItem>Контакты</MenuItem></Link>\r\n          </MenuList>\r\n      </Card>\r\n      <Card className={styles.content}>\r\n          <Route path='/' exact component={About} />\r\n           <Route path='/todo' component={Todo} />\r\n           <Route path='/contacts' component={Contacts} />\r\n      </Card>\r\n      </div>\r\n    </Router>);\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}